package druidsurv.cards;

import basemod.AutoAdd;
import basemod.interfaces.AlternateCardCostModifier;
import com.megacrit.cardcrawl.actions.common.ReducePowerAction;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
import com.megacrit.cardcrawl.monsters.AbstractMonster;
import druidsurv.CharacterFile;
import druidsurv.powers.BloontoniumPower;

import static druidsurv.ModFile.makeID;
import static druidsurv.ModFile.modID;

@AutoAdd.Ignore
public abstract class AbstractBloonCard extends AbstractEasyCard {
    public final static String ID = makeID("AbstractBloon");
    
    int DELAY = 1;
    int ATTACK = 1;
    int ATTACK = 1;
    // intellij stuff attack, enemy, basic, 6, 3,  , , ,

    public AbstractBloonCard(final String cardID, final int cost, final CardType type, final CardRarity rarity, final CardTarget target) {
        this(cardID, cost, type, rarity, target, CharacterFile.Enums.DRUIDSURV_COLOR, cardID.replace(modID + ":", ""));
    }

    public AbstractBloonCard(final String cardID, final int cost, final CardType type, final CardRarity rarity, final CardTarget target, final String cardArt) {
        this(cardID, cost, type, rarity, target, CharacterFile.Enums.DRUIDSURV_COLOR, cardArt);
    }

    public AbstractBloonCard(final String cardID, final int cost, final CardType type, final CardRarity rarity, final CardTarget target, final CardColor color) {
        this(cardID, cost, type, rarity, target, color, cardID.replace(modID + ":", ""));
    }

    public AbstractBloonCard(final String cardID, final int cost, final CardType type, final CardRarity rarity, final CardTarget target, final CardColor color, final String cardArt) {
        super(cardID, cost, type, rarity, target, color, myGetCardTextureString(cardArt, type));
    }

    public void upp() {}

    @Override
    public void use(AbstractPlayer abstractPlayer, AbstractMonster abstractMonster) {}
}